{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "NameForAPIManager": {
            "type": "string",
            "metadata": {
                "description": "API Manager name"
            },
            "defaultValue": "apiName"
        },
        "apiManagerSKU": {
            "type": "string",
            "metadata": {
                "description": "Define SKU of API Manager"
            },
            "defaultValue": "Developer",
            "allowedValues": [
                "Developer",
                "Standard",
                "Premium"
            ]
        },
        "administratorEmailForAPIManager": {
            "type": "string",
            "metadata": {
                "description": "Email for emails and alerts"
            },
            "defaultValue": "testemail@hotmail.com"
        },
        "organizationNameForAPIManager": {
            "type": "string",
            "metadata": {
                "description": "Organization Name for emails and alerts"
            },
            "defaultValue": "TestOrg"
        },
        "complianceProfile": {
            "type": "string",
            "metadata": {
                "description": "PCI or no-PCI"
            },
            "defaultValue": "no-pci",
            "allowedValues": [
                "no-pci",
                "pci"
            ]
        },
        "environment": {
            "type": "string",
            "metadata": {
                "description": "Define environment to deploy in"
            },
            "defaultValue": "development",
            "allowedValues": [
                "production",
                "preproduction",
                "development"
            ]
        },
        "VNetName": {
            "type": "string",
            "defaultValue": "commp-vnet",
            "metadata": {
                "description": "Name for the Virtual Network (vNet)"
            }
        },
        "VNetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.25.25.0/27",
            "metadata": {
                "description": "CIDR block for the vNet"
            }
        },
        "DNS1ServerAddress": {
            "type": "string",
            "defaultValue": "10.25.0.1",
            "metadata": {
                "description": "Domain Name Server 1"
            }
        },
        "DNS2ServerAddress": {
            "type": "string",
            "defaultValue": "10.25.0.2",
            "metadata": {
                "description": "Domain Name Server 2"
            }
        },
        "subnetAPIManagerName": {
            "type": "string",
            "defaultValue": "commptew",
            "metadata": {
                "description": "Name for API Manager Subnet"
            }
        },
        "subnetAPIManagerAddressPrefix": {
            "type": "string",
            "defaultValue": "10.25.25.0/27",
            "metadata": {
                "description": "CIDR block for API Manager Subnet"
            }
        },
        "NameForNSGOfAPIManager": {
            "type": "string",
            "defaultValue": "comit-apiManager-nsg",
            "metadata": {
                "description": "Network Security Group Name for API Manager Subnet"
            }
        },
        "proxyCustomHostname": {
            "type": "string",
            "metadata": {
                "description": "Proxy Custom hostname."
            }
        },
        "proxyCustomHostnameBase64EncodedPfxCertificate": {
            "type": "securestring",
            "metadata": {
                "description": "Base-64 encoded SSL .pfx Certificate for proxy custom hostname."
            }
        },
        "proxySSLCertificatePassword": {
            "type": "securestring",
            "metadata": {
                "description": "Proxy SSL certificate password."
            }
        },
        "portalCustomHostname": {
            "type": "string",
            "metadata": {
                "description": "Portal Custom hostname."
            }
        },
        "portalCustomHostnameBase64EncodedPfxCertificate": {
            "type": "securestring",
            "metadata": {
                "description": "Base-64 encoded SSL .pfx Certificate for portal custom hostname."
            }
        },
        "portalSSLCertificatePassword": {
            "type": "securestring",
            "metadata": {
                "description": "Portal SSL certificate password."
            }
        },
        "managementCustomHostname": {
            "type": "string",
            "metadata": {
                "description": "Management Custom hostname."
            }
        },
        "managementCustomHostnameBase64EncodedPfxCertificate": {
            "type": "securestring",
            "metadata": {
                "description": "Base-64 encoded SSL .pfx Certificate for management custom hostname."
            }
        },
        "managementSSLCertificatePassword": {
            "type": "securestring",
            "metadata": {
                "description": "Management SSL certificate password."
            }
        },
        "scmCustomHostname": {
            "type": "string",
            "metadata": {
                "description": "SCM Custom hostname."
            }
        },
        "scmCustomHostnameBase64EncodedPfxCertificate": {
            "type": "securestring",
            "metadata": {
                "description": "Base-64 encoded SSL .pfx Certificate for SCM custom hostname."
            }
        },
        "scmSSLCertificatePassword": {
            "type": "securestring",
            "metadata": {
                "description": "SCM SSL certificate password."
            }
        }
    },
    "variables": {
        "api-version": "2015-06-15",
        "subnetRef": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', parameters('VNetName'), parameters('subnetAPIManagerName'))]"
    },
    "resources": [
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('NameForNSGofAPIManager')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "complianceProfile": "[parameters('complianceProfile')]",
                "environment": "[parameters('environment')]",
                "tier": "communications"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-https-outbound",
                        "properties": {
                            "description": "HTTPS Azure Sync (TCP/443)",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "INTERNET",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "allow-https-inbound",
                        "properties": {
                            "description": "HTTPS API Mgmt(TCP/443)",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "INTERNET",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-http-outbound",
                        "properties": {
                            "description": "HTTPS Azure Sync (TCP/80)",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "INTERNET",
                            "access": "Allow",
                            "priority": 140,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "allow-http-inbound",
                        "properties": {
                            "description": "HTTPS API Mgmt(TCP/80)",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "INTERNET",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 150,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-ldap-1",
                        "properties": {
                            "description": "LDAP (TCP/636)",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "636",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "INTERNET",
                            "access": "Allow",
                            "priority": 160,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "allow-dns1",
                        "properties": {
                            "description": "DNS (UDP/53)",
                            "protocol": "UDP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "53",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('DNS1ServerAddress')]",
                            "access": "Allow",
                            "priority": 170,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "allow-dns2",
                        "properties": {
                            "description": "DNS (UDP/53)",
                            "protocol": "UDP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "53",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('DNS2ServerAddress')]",
                            "access": "Allow",
                            "priority": 180,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "allow-managementWebServer",
                        "properties": {
                            "description": "Mgmt Web Server (TCP/3443)",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3443",
                            "sourceAddressPrefix": "INTERNET",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-azureSql",
                        "properties": {
                            "description": "Azure SQL Dependency (TCP/1433)",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "1433",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "INTERNET",
                            "access": "Allow",
                            "priority": 310,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "allow-azureSqlDynamicPort",
                        "properties": {
                            "description": "Azure SQL Dependency v12 (TCP/10000-11999)",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "10000-11999",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "INTERNET",
                            "access": "Allow",
                            "priority": 320,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "allow-azureSqlDynamicPort2",
                        "properties": {
                            "description": "Azure SQL Dependency v12 (TCP/14000-14999)",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "14000-14999",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "INTERNET",
                            "access": "Allow",
                            "priority": 330,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "allow-amqp",
                        "properties": {
                            "description": "Evenct center and Mgmt Agent Dependency (AMQP/5671)",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5671",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "INTERNET",
                            "access": "Allow",
                            "priority": 340,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "allow-redis-inbound",
                        "properties": {
                            "description": "Redis Cache Dependency In (TCP/6381-6383)",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "6381-6383",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 350,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-redis-outbound",
                        "properties": {
                            "description": "Redis Cache Dependency Out (TCP/6381-6383)",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "6381-6383",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 360,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "allow-azureGit",
                        "properties": {
                            "description": "Azure GIT dependency (TCP/445)",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "445",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "INTERNET",
                            "access": "Allow",
                            "priority": 370,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "allow-lbAzure",
                        "properties": {
                            "description": "Load Balancer Azure (TCP/*)",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 380,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "deny-all",
                        "properties": {
                            "description": "Deny all traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('api-version')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('VNetName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "complianceProfile": "[parameters('complianceProfile')]",
                "environment": "[parameters('environment')]",
                "tier": "communications"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('VNetAddressPrefix')]"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": [
                        "[parameters('DNS1ServerAddress')]",
                        "[parameters('DNS2ServerAddress')]"
                    ]
                },
                "subnets": [
                    {
                        "dependsOn": [
                            "[concat('Microsoft.Network/networkSecurityGroups/', parameters('NameForNSGofAPIManager'))]"
                        ],
                        "name": "[parameters('subnetAPIManagerName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetAPIManagerAddressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('NameForNSGofAPIManager'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-10-10",
            "name": "[parameters('NameForAPIManager')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "complianceProfile": "[parameters('complianceProfile')]",
                "environment": "[parameters('environment')]",
                "tier": "communications"
            },
            "type": "Microsoft.ApiManagement/service",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('VNetName'))]"
            ],
            "sku": {
                "name": "[parameters('apiManagerSKU')]",
                "capacity": 1
            },
            "properties": {
                "hostnameConfigurations": [
                    {
                        "type": "Proxy",
                        "hostName": "[parameters('proxyCustomHostname')]",
                        "encodedCertificate": "[parameters('proxyCustomHostnameBase64EncodedPfxCertificate')]",
                        "certificatePassword": "[parameters('proxySSLCertificatePassword')]",
                        "negotiateClientCertificate": false
                    },
                    {
                        "type": "Portal",
                        "hostName": "[parameters('portalCustomHostname')]",
                        "encodedCertificate": "[parameters('portalCustomHostnameBase64EncodedPfxCertificate')]",
                        "certificatePassword": "[parameters('portalSSLCertificatePassword')]",
                        "negotiateClientCertificate": false
                    },
                    {
                        "type": "Management",
                        "hostName": "[parameters('managementCustomHostname')]",
                        "encodedCertificate": "[parameters('managementCustomHostnameBase64EncodedPfxCertificate')]",
                        "certificatePassword": "[parameters('managementSSLCertificatePassword')]",
                        "negotiateClientCertificate": false
                    },
                    {
                        "type": "SCM",
                        "hostName": "[parameters('scmCustomHostname')]",
                        "encodedCertificate": "[parameters('scmCustomHostnameBase64EncodedPfxCertificate')]",
                        "certificatePassword": "[parameters('scmSSLCertificatePassword')]",
                        "negotiateClientCertificate": false
                    }
                ],
                "publisherEmail": "[parameters('AdministratorEmailForAPIManager')]",
                "publisherName": "[parameters('OrganizationNameForAPIManager')]",
                "VirtualNetworkConfiguration": {
                    "properties": {
                        "subnetResourceId": "[variables('subnetRef')]",
                        "location": "[resourceGroup().location]"
                    }
                },
                "virtualNetworkType": "Internal"
            }
        }
    ]
}