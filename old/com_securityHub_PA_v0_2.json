{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "complianceProfile": {
            "type": "string",
            "allowedValues": [
				"no-pci",
                "pci"
            ],
            "defaultValue": "no-pci",
            "metadata": {
                "description": "PCI or no-PCI"
            }
        },
        "environment": {
            "type": "string",
            "allowedValues": [
				"production",
                "preproduction",
                "development"
            ],
            "defaultValue": "development",
            "metadata": {
                "description": "Define environment to deploy in"
            }
        },
        "PALocation": { 
            "type": "string",             
            "allowedValues": [ 
                "North Europe", 
                "West Europe"
            ], 
            "defaultValue": "West Europe",
            "metadata": {
                "description": "Location for the Palo Alto Firewall"
            }
        },        
        "PADnsNameForPublicIP": {
            "type": "string",
            "metadata": {
                "description": "Globally unique DNS name to access management interface of VM-Series firewall"
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "comitaprew",
            "metadata": {
                "description": "Name of VM-Series VM in the Azure portal"
            }
        },
        "adminUserName": {
            "type": "string",
            "defaultValue": "systemAdmin",
            "metadata": {
                "description": "Username for VM-Series administrator"
            }
        },
        "adminPassword": {
            "type": "securestring",
	        "defaultValue": "PassWord012!",
            "metadata": {
                "description": "Password for VM-Series administrator"
            }
        },
        "vmSize": {
            "type": "string",
            "allowedValues": [
                "Standard_D3",
                "Standard_D4"
            ],
            "metadata": {
                "description": "Azure VM size for VM-Series"
            }
        },
        "srcIPInboundNSG": {
            "type": "string",
            "defaultValue": "52.236.168.80",
            "metadata": {
                "description": "Your source public IP address. Added to the inbound DefaultNSG on eth0 (MGMT)"
            }
        },
        "baseUrl" : {
            "type" : "string",
            "defaultValue": "https://raw.githubusercontent.com/saurabhtrekker/UI1/master",
            "metadata": {
                "artifactsBaseUrl": ""
            }            
	    },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the virtual network that the consumer wants to use"
            },
            "defaultValue": "panVnet"
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "192.168.0.0/16",
            "metadata": {
                "description": "Virtual network address CIDR"
            }
        },
        "subnet0Name": {
            "type": "string",
            "defaultValue": "Mgmt",
            "metadata": {
                "description": "Subnet for the Mgmt"
            }
        },
        "subnet1Name": {
            "type": "string",
            "defaultValue": "Untrust",
            "metadata": {
                "description": "Subnet for the Untrust"
            }
        },
        "subnet2Name": {
            "type": "string",
            "defaultValue": "Trust",
            "metadata": {
                "description": "Subnet for the Trust"
            }
        },
        "subnet0Prefix": {
            "type": "string",
            "defaultValue": "192.168.0.0/24",
            "metadata": {
                "description": "Mgmt subnet CIDR"
            }
        },
        "subnet1Prefix": {
            "type": "string",
            "defaultValue": "192.168.1.0/24",
            "metadata": {
                "description": "Untrust subnet CIDR"
            }
        },
        "subnet2Prefix": {
            "type": "string",
            "defaultValue": "192.168.2.0/24",
            "metadata": {
                "description": "Trust subnet CIDR"
            }
        },
        "subnet0StartAddress": {
            "type": "string",
            "defaultValue": "192.168.0.4",
            "metadata": {
                "description": "Mgmt subnet start address"
            }
        },
        "subnet1StartAddress": {
            "type": "string",
            "defaultValue": "192.168.1.4",
            "metadata": {
                "description": "Untrust subnet start address"
            }
        },
        "subnet2StartAddress": {
            "type": "string",
            "defaultValue": "192.168.2.4",
            "metadata": {
                "description": "Trust subnet start address"
            }
        },
        "PAStorageAccountName": {
            "type": "string",
            "defaultValue": "storageAccountWizarck",
            "metadata": {
                "description": "Name for Storage Account"
            }            
        },
        "PAStorageAccountSKU": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "SKU for Storage Account"
            }            
        }
    },
    "variables": {
        "apiVersion": "2015-06-15",
        "imagePublisher": "paloaltonetworks",
    	"imageSku" : "byol",
	    "imageOffer" : "vmseries1",
        "fwpublicIPName": "[concat(parameters('vmName'), '-fwMgmtPublicIP')]",
        "nicName": "[concat(parameters('vmName'), '-eth')]",
        "FWPrivateIPAddressUntrust": "[parameters('subnet1StartAddress')]",
        "FWPrivateIPAddressTrust": "[parameters('subnet2StartAddress')]",
        "publicIPAddressType": "Dynamic",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "nsgname-mgmt": "[concat(parameters('vmName'), '-DefaultNSG')]",
        "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
        "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet2Name'))]",
	"vmTemplateUrl": "[concat(parameters('baseUrl'), '/virtual-machine-password','.json')]"
    },
        "resources": [
            {
                "name": "[parameters('PAStorageAccountName')]",
                "type": "Microsoft.Storage/storageAccounts",            
                "apiVersion": "2016-01-01",
                "location": "[parameters('PALocation')]",
                "tags": {
                    "complianceProfile": "[parameters('complianceProfile')]",
                    "environment": "[parameters('environment')]",
                    "tier": "data"
                },
                "sku": {
                "name": "[parameters('PAStorageAccountSKU')]"
                },
                "kind": "Storage",
                "properties": {}
            },
            {
                "apiVersion": "[variables('apiVersion')]",
                "type": "Microsoft.Network/networkSecurityGroups",
                "name": "[concat(parameters('vmName'), '-DefaultNSG')]",
                "location": "[parameters('PALocation')]",
                "properties": {
                    "securityRules": [
                        {
                            "name": "Allow-Outside-From-IP",
                            "properties": {
                                "description": "Rule",
                                "protocol": "*",
                                "sourcePortRange": "*",
                                "destinationPortRange": "*",
                                "sourceAddressPrefix": "[parameters('srcIPInboundNSG')]",
                                "destinationAddressPrefix": "*",
                                "access": "Allow",
                                "priority": 100,
                                "direction": "Inbound"
                            }
                        }, 
                        {
                            "name": "Allow-Intra",
                            "properties": {
                            "description": "Allow intra network traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[concat(parameters('virtualNetworkAddressPrefix'))]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                        },
                        {
                            "name": "Default-Deny",
                            "properties": {
                                "description": "Default-Deny if we don't match Allow rule",
                                "protocol": "*",
                                "sourcePortRange": "*",
                                "destinationPortRange": "*",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "*",
                                "access": "Deny",
                                "priority": 200,
                                "direction": "Inbound"
                            }  
                        }
                    ]
                }
            },
            {
                "apiVersion": "[variables('apiVersion')]",
                "type": "Microsoft.Network/publicIPAddresses",
                "name": "[variables('fwpublicIPName')]",
                "location": "[parameters('PALocation')]",
                "properties": {
                    "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                    "dnsSettings": {
                        "domainNameLabel": "[parameters('PADnsNameForPublicIP')]"
                    }
                }
            },
            {
                "apiVersion": "[variables('apiVersion')]",
                "type": "Microsoft.Network/virtualNetworks",
                "name": "[parameters('virtualNetworkName')]",
                "location": "[parameters('PALocation')]",
                "dependsOn": [
                    "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgname-mgmt'))]"
                ],
                "properties": {
                    "addressSpace": {
                        "addressPrefixes": [
                            "[parameters('virtualNetworkAddressPrefix')]"
                        ]
                    },
                    "subnets": [
                        {
                            "name": "[parameters('subnet0Name')]",
                            "properties": {
                                "addressPrefix": "[parameters('subnet0Prefix')]",
                                "networkSecurityGroup": {
                                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname-mgmt'))]"
                                }
                            }
                        }, 
                        {
                            "name": "[parameters('subnet1Name')]",
                            "properties": {
                                "addressPrefix": "[parameters('subnet1Prefix')]"
                            }
                        }, 
                        {
                            "name": "[parameters('subnet2Name')]",
                            "properties": {
                                "addressPrefix": "[parameters('subnet2Prefix')]"
                            }
                        }
                    ]
                }
            },
    {
        "name": "[parameters('vmName')]",        
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2015-06-15",
        "location": "[parameters('PALocation')]",
        "plan": {
           "name": "[variables('imageSku')]",
           "product": "[variables('imageOffer')]",
           "publisher": "[variables('imagePublisher')]"
        },
        "dependsOn": [
            "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgname-mgmt'))]",
            "[concat('Microsoft.Network/publicIPAddresses/', variables('fwpublicIPName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "properties": {
            "hardwareProfile": {
                "vmSize": "[parameters('vmSize')]"
            },
            "osProfile": {
                "computerName": "[parameters('vmName')]",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]"
            },
            "storageProfile": {
                "imageReference": {
                    "publisher": "[variables('imagePublisher')]",
                    "offer": "[variables('imageOffer')]",
                    "sku": "[variables('imageSku')]",
                    "version": "latest"
                },
                "osDisk": {
                    "name": "osdisk",
                    "vhd": {
                        "uri": "[concat('http://', parameters('PAStorageAccountName'), '.blob.core.windows.net/vhds/', parameters('vmName'), '-', variables('imageOffer'), '-', variables('imageSku'), '.vhd')]"
                    },
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                }
            },
            "networkProfile": {
                "networkInterfaces": [{
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),'0'))]",
                    "properties": {
                        "primary": true,
                        "ipConfigurations": [{
                            "name": "[concat('ipconfig', '0')]",
                            "properties": {
                                "privateIPAllocationMethod": "Dynamic",
                                "publicIPAddress": {
                                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fwpublicIPName'))]"
                                },
                                "subnet": {
                                    "id": "[variables(concat('subnet','0','Ref'))]"
                                }
                            }
                        }]
                    }
                }, {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),'1'))]",
                    "properties": {
                        "primary": false,
                        "enableIPForwarding": true,
                        "ipConfigurations": [{
                            "name": "[concat('ipconfig', '1')]",
                            "properties": {
                                "privateIPAllocationMethod": "Static",
                                "privateIPAddress": "[variables('FWPrivateIPAddressUntrust')]",
                                "subnet": {
                                    "id": "[variables(concat('subnet','1','Ref'))]"
                                }
                            }
                        }]
                    }
                }, {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),'2'))]",
                    "properties": {
                        "primary": false,
                        "enableIPForwarding": true,
                        "ipConfigurations": [{
                            "name": "[concat('ipconfig', '2')]",
                            "properties": {
                                "privateIPAllocationMethod": "Static",
                                "privateIPAddress": "[variables('FWPrivateIPAddressTrust')]",
                                "subnet": {
                                    "id": "[variables(concat('subnet','2','Ref'))]"
                                }
                            }
                        }]
                    }
                }]
                }
            }
        },
        {
            "name": "PAN-VM",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [        
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('PAStorageAccountName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                "uri": "[variables('vmTemplateUrl')]",
                "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('PALocation')]"
                    },
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "imageSku": {
                        "value": "[variables('imageSku')]"
                    },
                    "imageOffer": {
                        "value": "[variables('imageOffer')]"
                    },
                    "imagePublisher": {
                        "value": "[variables('imagePublisher')]"
                    },
                    "nicName": {
                        "value": "[variables('nicName')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "newStorageAccount": {
                        "value": "[parameters('PAStorageAccountName')]"
                    },
                    "sshKey": {
                        "value": ""
                    }
                }
            }
        }
    ]
}